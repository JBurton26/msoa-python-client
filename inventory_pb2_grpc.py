# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import inventory_pb2 as inventory__pb2


class InventoryStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetStock = channel.unary_unary(
                '/Inventory/GetStock',
                request_serializer=inventory__pb2.LevelRequest.SerializeToString,
                response_deserializer=inventory__pb2.StockItem.FromString,
                )
        self.ChangeStock = channel.unary_unary(
                '/Inventory/ChangeStock',
                request_serializer=inventory__pb2.AmendRequest.SerializeToString,
                response_deserializer=inventory__pb2.AmendResponse.FromString,
                )
        self.CheckShort = channel.unary_unary(
                '/Inventory/CheckShort',
                request_serializer=inventory__pb2.ShortRequest.SerializeToString,
                response_deserializer=inventory__pb2.ShortList.FromString,
                )
        self.GetStore = channel.unary_unary(
                '/Inventory/GetStore',
                request_serializer=inventory__pb2.ShortRequest.SerializeToString,
                response_deserializer=inventory__pb2.ShortList.FromString,
                )


class InventoryServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetStock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeStock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckShort(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStore(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InventoryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetStock': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStock,
                    request_deserializer=inventory__pb2.LevelRequest.FromString,
                    response_serializer=inventory__pb2.StockItem.SerializeToString,
            ),
            'ChangeStock': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeStock,
                    request_deserializer=inventory__pb2.AmendRequest.FromString,
                    response_serializer=inventory__pb2.AmendResponse.SerializeToString,
            ),
            'CheckShort': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckShort,
                    request_deserializer=inventory__pb2.ShortRequest.FromString,
                    response_serializer=inventory__pb2.ShortList.SerializeToString,
            ),
            'GetStore': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStore,
                    request_deserializer=inventory__pb2.ShortRequest.FromString,
                    response_serializer=inventory__pb2.ShortList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Inventory', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Inventory(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetStock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Inventory/GetStock',
            inventory__pb2.LevelRequest.SerializeToString,
            inventory__pb2.StockItem.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeStock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Inventory/ChangeStock',
            inventory__pb2.AmendRequest.SerializeToString,
            inventory__pb2.AmendResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckShort(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Inventory/CheckShort',
            inventory__pb2.ShortRequest.SerializeToString,
            inventory__pb2.ShortList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStore(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Inventory/GetStore',
            inventory__pb2.ShortRequest.SerializeToString,
            inventory__pb2.ShortList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
